.TH cpuload 8  "2021-01-07" "USER COMMANDS"
.SH NAME
cpuload \- Trace cpu load. Uses Linux eBPF/bcc.
.SH SYNOPSIS
.B cpuload.py [-h] [-t TIME] [-n NUMBER] [-u USAGE] [-c CPUMASK]
.SH DESCRIPTION
cpuload traces the cpu load, showing which tasks run out of cpu resource.

It display top N tasks use more than U percent cpu resource when the cpu
doesn't enter idle state for more than T ns.

This works by tracing the sched switch events using tracepoints.

Since this uses BPF, only the root user can use this tool.
.SH REQUIREMENTS
CONFIG_BPF and bcc.
.SH OPTIONS
.TP
\-h
Print usage message.
.TP
\-t TIME
Minimum nsec to print
.TP
\-n NUMBER
Maximum tasks to print
.TP
\-u USAGE
Minimum usage to print
.TP
\-c CPUMASK
Target cpus' mask to print
.SH EXAMPLES
.TP
Print top 3 tasks which use more than 30 percent of CPU in 100 ms:
#
.B cpuload -t 100000000 -n 3 -u 30
.TP
Only print tasks on cpu0 and cpu1:
#
.B cpuload -c 3
.SH FIELDS
.TP
COMM
Process name
.TP
PID
Process ID
.TP
CPU
CPU ID
.TP
TIME(ms)
Time of the task run, in millisecond
.TP
USAGE
CPU usage of the task
.SH OVERHEAD
This traces the kernel sched_switch tracepoints and prints output for each
event. As the rate of this is generally expected to be low (< 1000/s), the
overhead is also expected to be negligible.
.SH SOURCE
This is from bcc.
.IP
https://github.com/iovisor/bcc
.PP
Also look in the bcc distribution for a companion _examples.txt file containing
example usage, output, and commentary for this tool.
.SH OS
Linux
.SH STABILITY
Unstable - in development.
.SH AUTHOR
Ethercflow 
